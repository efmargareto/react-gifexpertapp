{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFecthGifs.js","GitExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categs","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAe9C,OACI,sBAAMC,SAXW,SAAAC,GACjBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAM,OAAMP,GAAN,mBAAqBO,OAC1CN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAhBc,SAAAP,GAAC,OAAIF,EAAcE,EAAEQ,OAAOF,a,+BCN7CG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,0FAE6EC,UAAUH,GAFvF,qBAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCCPO,EAAc,SAAC,GAAyB,EAAtBJ,GAAuB,IAAnBC,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAEtC,OACI,sBAAKc,UAAU,2CAAf,UAEI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,kCAAMA,EAAN,WCJCO,EAAU,SAAC,GAAoB,IAAjBnB,EAAgB,EAAhBA,SAAgB,ECDf,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAqBxC,OAdAC,qBAAW,WAEPxB,EAASC,GACJwB,MAAM,SAAAC,GAEHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAKtB,CAACpB,IAEGqB,EDlB0BK,CAAc1B,GAAlCa,EAF0B,EAE/BN,KAAaa,EAFkB,EAElBA,QAErB,OACI,qCAEI,mCAAOpB,EAAP,OAEEoB,GAAW,2CAEb,qBAAKJ,UAAU,YAAf,SAGQH,EAAOJ,KAAK,SAAAC,GAAG,OAEX,cAAC,EAAD,aAEIA,IAAMA,GACDA,GAFCA,EAAIC,aEavBgB,EA7BM,WAAO,IAAD,EAEezC,mBAAS,CAAC,eAFzB,mBAEf0C,EAFe,KAEH3C,EAFG,KAIvB,OACI,qCACI,8CAEA,cAAC,EAAD,CAAaA,cAAgBA,IAE7B,uBAEA,6BAEQ2C,EAAWnB,KAAK,SAAAT,GAAQ,OAEpB,cAAC,EAAD,CAEIA,SAAWA,GADLA,YCflC6B,IAASC,OAAQ,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.32600b0a.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nexport const AddCategory = ({ setCategorias }) => {\n\n    const [inputValue, setInputValue] = useState('')\n\n    const handleInputChange = e => setInputValue(e.target.value)\n    const handleSubmit = e => {\n        e.preventDefault() \n\n        if( inputValue.trim().length > 2) {\n            setCategorias( categs => [ inputValue, ...categs ])\n            setInputValue('')\n        }\n\n    }\n\n    return (\n        <form onSubmit={ handleSubmit }>\n            <input\n                type='text'\n                value={ inputValue }\n                onChange={ handleInputChange }\n                />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategorias: PropTypes.func.isRequired\n}\n\n\n\n\n\n\n\n","\nexport const getGifs = async( category ) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=wkQ7T3FMeYa1sTElmw3qSWO5GCWVZXcK&q=${ encodeURI(category) }&limit=6`\n    const resp = await fetch( url )\n    const { data } = await resp.json()\n\n    const gifs = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n    \n    return gifs\n\n}","import React from 'react'\n\nexport const GifGridItem = ( { id, title, url } ) => {\n\n    return (\n        <div className='card animate__animated animate__fadeInUp'>\n\n            <img src={ url } alt={ title } />\n            <p> { title } </p>\n                \n        </div>\n    )\n}\n","import React  from 'react'\nimport { useFetchGifs } from '../hooks/useFecthGifs'\nimport { GifGridItem } from './GifGridItem'\n\nexport const GifGrid = ( { category } ) => {\n\n    const { data:images, loading } = useFetchGifs( category )\n\n    return (\n        <>\n\n            <h3> { category } </h3>\n\n            { loading && <p>Loading...</p> }\n             \n            <div className='card-grid'>\n\n                {\n                    images.map( img => (\n\n                        <GifGridItem \n                            key={ img.id }\n                            img={ img }\n                            { ...img }\n                        />\n                        \n                    ))\n                }\n\n            </div>\n\n        </>\n    )\n}\n    ","import { useEffect, useState } from \"react\"\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = ( category ) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    })\n\n    useEffect( () => {\n\n        getGifs( category )\n            .then( imgs => {\n\n                setState({\n                    data: imgs,\n                    loading: false\n                })\n\n            }) \n\n    }, [category])\n\n    return state // { data:[]. loading: true }\n\n}\n\n\n","import React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory'\nimport { GifGrid } from './components/GifGrid'\n\n\nconst GifExpertApp = () => {\n\n    const [ categorias, setCategorias ] = useState(['Basketball']) // []\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n\n            <AddCategory setCategorias={ setCategorias }/>\n\n            <hr />\n\n            <ol>\n                {\n                    categorias.map( category => (\n\n                        <GifGrid \n                            key={ category }    \n                            category={ category }\n                        />\n\n                    ))\n                }\n            </ol>\n\n        </>\n    )\n}\n\nexport default GifExpertApp\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport GifExpertApp from \"./GitExpertApp\";    \n\n\nReactDOM.render( <GifExpertApp />, document.getElementById('root') );\n\n"],"sourceRoot":""}